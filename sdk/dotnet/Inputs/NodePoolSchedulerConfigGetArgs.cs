// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Nomad.Inputs
{

    public sealed class NodePoolSchedulerConfigGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// `(string)` - Whether or not memory
        /// oversubscription is enabled in the node pool. Possible values are
        /// `"enabled"` or `"disabled"`. If not defined the global cluster
        /// configuration is used.
        /// 
        /// &gt; This option differs from Nomad, where it's represented as a boolean, to
        /// allow distinguishing between memory oversubscription being disabled in the
        /// node pool and this property not being set.
        /// </summary>
        [Input("memoryOversubscription")]
        public Input<string>? MemoryOversubscription { get; set; }

        /// <summary>
        /// `(string)` - The scheduler algorithm used in the node
        /// pool. Possible values are `Binpack` or `Spread`. If not defined the global
        /// cluster configuration is used.
        /// </summary>
        [Input("schedulerAlgorithm")]
        public Input<string>? SchedulerAlgorithm { get; set; }

        public NodePoolSchedulerConfigGetArgs()
        {
        }
        public static new NodePoolSchedulerConfigGetArgs Empty => new NodePoolSchedulerConfigGetArgs();
    }
}
