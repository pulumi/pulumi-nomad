// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Nomad.Outputs
{

    [OutputType]
    public sealed class AclAuthMethodConfigOidcClientAssertionPrivateKey
    {
        /// <summary>
        /// `(string: optional)` - Becomes the JWT's "kid" header.
        /// Mutually exclusive with `PemCert` and `PemCertFile`.
        /// Allowed `KeyIdHeader` values: "kid" (the default)
        /// </summary>
        public readonly string? KeyId;
        /// <summary>
        /// `(string: optional)` - Which header the provider uses
        /// to find the public key to verify the signed JWT.
        /// The default and allowed values depend on whether you set `KeyId`,
        /// `PemCert`, or `PemCertFile`. You must set exactly one of those
        /// options, so refer to them for their requirements.
        /// </summary>
        public readonly string? KeyIdHeader;
        /// <summary>
        /// `(string: optional)` - An x509 certificate, signed by the
        /// private key or a CA, in pem format. Nomad uses this certificate to
        /// derive an [x5t#S256][] (or [x5t][]) key_id.
        /// Mutually exclusive with `PemCertFile` and `KeyId`.
        /// Allowed `KeyIdHeader` values: "x5t", "x5t#S256" (default "x5t#S256")
        /// </summary>
        public readonly string? PemCert;
        /// <summary>
        /// `(string: optional)` - An absolute path to an x509
        /// certificate on Nomad servers' disk, signed by the private key or a CA,
        /// in pem format.
        /// Nomad uses this certificate to derive an [x5t#S256][] (or [x5t][])
        /// header. Mutually exclusive with `PemCert` and key_id.
        /// Allowed `KeyIdHeader` values: "x5t", "x5t#S256" (default "x5t#S256")
        /// </summary>
        public readonly string? PemCertFile;
        /// <summary>
        /// `(string: &lt;optional&gt;)` - An RSA private key, in pem format.
        /// It is used to sign the JWT. Mutually exclusive with `PemKey`.
        /// </summary>
        public readonly string? PemKey;
        /// <summary>
        /// `(string: optional)` - An absolute path to a private key
        /// on Nomad servers' disk, in pem format. It is used to sign the JWT.
        /// Mutually exclusive with `PemKeyFile`.
        /// </summary>
        public readonly string? PemKeyFile;

        [OutputConstructor]
        private AclAuthMethodConfigOidcClientAssertionPrivateKey(
            string? keyId,

            string? keyIdHeader,

            string? pemCert,

            string? pemCertFile,

            string? pemKey,

            string? pemKeyFile)
        {
            KeyId = keyId;
            KeyIdHeader = keyIdHeader;
            PemCert = pemCert;
            PemCertFile = pemCertFile;
            PemKey = pemKey;
            PemKeyFile = pemKeyFile;
        }
    }
}
