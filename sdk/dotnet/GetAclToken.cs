// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi.Utilities;

namespace Pulumi.Nomad
{
    public static class GetAclToken
    {
        public static Task<GetAclTokenResult> InvokeAsync(GetAclTokenArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAclTokenResult>("nomad:index/getAclToken:getAclToken", args ?? new GetAclTokenArgs(), options.WithVersion());

        public static Output<GetAclTokenResult> Invoke(GetAclTokenInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetAclTokenResult>("nomad:index/getAclToken:getAclToken", args ?? new GetAclTokenInvokeArgs(), options.WithVersion());
    }


    public sealed class GetAclTokenArgs : Pulumi.InvokeArgs
    {
        [Input("accessorId", required: true)]
        public string AccessorId { get; set; } = null!;

        public GetAclTokenArgs()
        {
        }
    }

    public sealed class GetAclTokenInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("accessorId", required: true)]
        public Input<string> AccessorId { get; set; } = null!;

        public GetAclTokenInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetAclTokenResult
    {
        public readonly string AccessorId;
        public readonly string CreateTime;
        public readonly bool Global;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        public readonly ImmutableArray<string> Policies;
        public readonly string SecretId;
        public readonly string Type;

        [OutputConstructor]
        private GetAclTokenResult(
            string accessorId,

            string createTime,

            bool global,

            string id,

            string name,

            ImmutableArray<string> policies,

            string secretId,

            string type)
        {
            AccessorId = accessorId;
            CreateTime = createTime;
            Global = global;
            Id = id;
            Name = name;
            Policies = policies;
            SecretId = secretId;
            Type = type;
        }
    }
}
