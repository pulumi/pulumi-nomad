// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Nomad
{
    public static class GetJobParser
    {
        /// <summary>
        /// Parse a HCL jobspec and produce the equivalent JSON encoded job.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.IO;
        /// using Pulumi;
        /// using Nomad = Pulumi.Nomad;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myJob = Nomad.GetJobParser.Invoke(new()
        ///     {
        ///         Hcl = File.ReadAllText($"{path.Module}/jobspec.hcl"),
        ///         Canonicalize = false,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetJobParserResult> InvokeAsync(GetJobParserArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetJobParserResult>("nomad:index/getJobParser:getJobParser", args ?? new GetJobParserArgs(), options.WithDefaults());

        /// <summary>
        /// Parse a HCL jobspec and produce the equivalent JSON encoded job.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.IO;
        /// using Pulumi;
        /// using Nomad = Pulumi.Nomad;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myJob = Nomad.GetJobParser.Invoke(new()
        ///     {
        ///         Hcl = File.ReadAllText($"{path.Module}/jobspec.hcl"),
        ///         Canonicalize = false,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetJobParserResult> Invoke(GetJobParserInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetJobParserResult>("nomad:index/getJobParser:getJobParser", args ?? new GetJobParserInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetJobParserArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// `(boolean: true)` - flag to enable setting any unset fields to their default values.
        /// </summary>
        [Input("canonicalize")]
        public bool? Canonicalize { get; set; }

        /// <summary>
        /// `(string)` - the HCL definition of the job.
        /// </summary>
        [Input("hcl", required: true)]
        public string Hcl { get; set; } = null!;

        public GetJobParserArgs()
        {
        }
        public static new GetJobParserArgs Empty => new GetJobParserArgs();
    }

    public sealed class GetJobParserInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// `(boolean: true)` - flag to enable setting any unset fields to their default values.
        /// </summary>
        [Input("canonicalize")]
        public Input<bool>? Canonicalize { get; set; }

        /// <summary>
        /// `(string)` - the HCL definition of the job.
        /// </summary>
        [Input("hcl", required: true)]
        public Input<string> Hcl { get; set; } = null!;

        public GetJobParserInvokeArgs()
        {
        }
        public static new GetJobParserInvokeArgs Empty => new GetJobParserInvokeArgs();
    }


    [OutputType]
    public sealed class GetJobParserResult
    {
        /// <summary>
        /// `(boolean: true)` - flag to enable setting any unset fields to their default values.
        /// </summary>
        public readonly bool? Canonicalize;
        /// <summary>
        /// `(string)` - the HCL definition of the job.
        /// </summary>
        public readonly string Hcl;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// `(string)` - the parsed job as JSON string.
        /// </summary>
        public readonly string Json;

        [OutputConstructor]
        private GetJobParserResult(
            bool? canonicalize,

            string hcl,

            string id,

            string json)
        {
            Canonicalize = canonicalize;
            Hcl = hcl;
            Id = id;
            Json = json;
        }
    }
}
