// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi.Utilities;

namespace Pulumi.Nomad
{
    public static class GetJobParser
    {
        /// <summary>
        /// Parse a HCL jobspec and produce the equivalent JSON encoded job.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.IO;
        /// using Pulumi;
        /// using Nomad = Pulumi.Nomad;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var myJob = Output.Create(Nomad.GetJobParser.InvokeAsync(new Nomad.GetJobParserArgs
        ///         {
        ///             Hcl = File.ReadAllText($"{path.Module}/jobspec.hcl"),
        ///             Canonicalize = false,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetJobParserResult> InvokeAsync(GetJobParserArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetJobParserResult>("nomad:index/getJobParser:getJobParser", args ?? new GetJobParserArgs(), options.WithVersion());

        /// <summary>
        /// Parse a HCL jobspec and produce the equivalent JSON encoded job.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.IO;
        /// using Pulumi;
        /// using Nomad = Pulumi.Nomad;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var myJob = Output.Create(Nomad.GetJobParser.InvokeAsync(new Nomad.GetJobParserArgs
        ///         {
        ///             Hcl = File.ReadAllText($"{path.Module}/jobspec.hcl"),
        ///             Canonicalize = false,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetJobParserResult> Invoke(GetJobParserInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetJobParserResult>("nomad:index/getJobParser:getJobParser", args ?? new GetJobParserInvokeArgs(), options.WithVersion());
    }


    public sealed class GetJobParserArgs : Pulumi.InvokeArgs
    {
        [Input("canonicalize")]
        public bool? Canonicalize { get; set; }

        [Input("hcl", required: true)]
        public string Hcl { get; set; } = null!;

        public GetJobParserArgs()
        {
        }
    }

    public sealed class GetJobParserInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("canonicalize")]
        public Input<bool>? Canonicalize { get; set; }

        [Input("hcl", required: true)]
        public Input<string> Hcl { get; set; } = null!;

        public GetJobParserInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetJobParserResult
    {
        public readonly bool? Canonicalize;
        public readonly string Hcl;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Json;

        [OutputConstructor]
        private GetJobParserResult(
            bool? canonicalize,

            string hcl,

            string id,

            string json)
        {
            Canonicalize = canonicalize;
            Hcl = hcl;
            Id = id;
            Json = json;
        }
    }
}
