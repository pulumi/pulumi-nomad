// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Nomad
{
    public static class GetAclRoles
    {
        /// <summary>
        /// Retrieve a list of ACL Roles.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nomad = Pulumi.Nomad;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Nomad.GetAclRoles.Invoke(new()
        ///     {
        ///         Prefix = "a242",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetAclRolesResult> InvokeAsync(GetAclRolesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAclRolesResult>("nomad:index/getAclRoles:getAclRoles", args ?? new GetAclRolesArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieve a list of ACL Roles.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nomad = Pulumi.Nomad;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Nomad.GetAclRoles.Invoke(new()
        ///     {
        ///         Prefix = "a242",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAclRolesResult> Invoke(GetAclRolesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAclRolesResult>("nomad:index/getAclRoles:getAclRoles", args ?? new GetAclRolesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieve a list of ACL Roles.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nomad = Pulumi.Nomad;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Nomad.GetAclRoles.Invoke(new()
        ///     {
        ///         Prefix = "a242",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAclRolesResult> Invoke(GetAclRolesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAclRolesResult>("nomad:index/getAclRoles:getAclRoles", args ?? new GetAclRolesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAclRolesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// `(string)` An optional string to filter ACL Roles based on ID
        /// prefix. If not provided, all policies are returned.
        /// </summary>
        [Input("prefix")]
        public string? Prefix { get; set; }

        public GetAclRolesArgs()
        {
        }
        public static new GetAclRolesArgs Empty => new GetAclRolesArgs();
    }

    public sealed class GetAclRolesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// `(string)` An optional string to filter ACL Roles based on ID
        /// prefix. If not provided, all policies are returned.
        /// </summary>
        [Input("prefix")]
        public Input<string>? Prefix { get; set; }

        public GetAclRolesInvokeArgs()
        {
        }
        public static new GetAclRolesInvokeArgs Empty => new GetAclRolesInvokeArgs();
    }


    [OutputType]
    public sealed class GetAclRolesResult
    {
        public readonly ImmutableArray<Outputs.GetAclRolesAclRoleResult> AclRoles;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? Prefix;

        [OutputConstructor]
        private GetAclRolesResult(
            ImmutableArray<Outputs.GetAclRolesAclRoleResult> aclRoles,

            string id,

            string? prefix)
        {
            AclRoles = aclRoles;
            Id = id;
            Prefix = prefix;
        }
    }
}
