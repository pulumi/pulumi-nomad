// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Nomad
{
    public static class GetAllocations
    {
        /// <summary>
        /// Retrieve a list of allocations from Nomad.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nomad = Pulumi.Nomad;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Nomad.GetAllocations.Invoke(new()
        ///     {
        ///         Filter = "JobID == \"example\"",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetAllocationsResult> InvokeAsync(GetAllocationsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAllocationsResult>("nomad:index/getAllocations:getAllocations", args ?? new GetAllocationsArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieve a list of allocations from Nomad.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nomad = Pulumi.Nomad;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Nomad.GetAllocations.Invoke(new()
        ///     {
        ///         Filter = "JobID == \"example\"",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAllocationsResult> Invoke(GetAllocationsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAllocationsResult>("nomad:index/getAllocations:getAllocations", args ?? new GetAllocationsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAllocationsArgs : global::Pulumi.InvokeArgs
    {
        [Input("filter")]
        public string? Filter { get; set; }

        /// <summary>
        /// `(string: &lt;optional&gt;)` - Specifies the namespace to search for
        /// allocations in.
        /// </summary>
        [Input("namespace")]
        public string? Namespace { get; set; }

        /// <summary>
        /// `(string: &lt;optional&gt;)` - Specifies a string to filter allocations
        /// based on an ID prefix.
        /// </summary>
        [Input("prefix")]
        public string? Prefix { get; set; }

        public GetAllocationsArgs()
        {
        }
        public static new GetAllocationsArgs Empty => new GetAllocationsArgs();
    }

    public sealed class GetAllocationsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filter")]
        public Input<string>? Filter { get; set; }

        /// <summary>
        /// `(string: &lt;optional&gt;)` - Specifies the namespace to search for
        /// allocations in.
        /// </summary>
        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        /// <summary>
        /// `(string: &lt;optional&gt;)` - Specifies a string to filter allocations
        /// based on an ID prefix.
        /// </summary>
        [Input("prefix")]
        public Input<string>? Prefix { get; set; }

        public GetAllocationsInvokeArgs()
        {
        }
        public static new GetAllocationsInvokeArgs Empty => new GetAllocationsInvokeArgs();
    }


    [OutputType]
    public sealed class GetAllocationsResult
    {
        /// <summary>
        /// `(list of allocations)` - A list of allocations matching the
        /// search criteria.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAllocationsAllocationResult> Allocations;
        public readonly string? Filter;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// `(string)` - The namespace the allocation belongs to.
        /// </summary>
        public readonly string? Namespace;
        public readonly string? Prefix;

        [OutputConstructor]
        private GetAllocationsResult(
            ImmutableArray<Outputs.GetAllocationsAllocationResult> allocations,

            string? filter,

            string id,

            string? @namespace,

            string? prefix)
        {
            Allocations = allocations;
            Filter = filter;
            Id = id;
            Namespace = @namespace;
            Prefix = prefix;
        }
    }
}
