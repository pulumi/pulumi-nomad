// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Nomad
{
    public static class GetAclRole
    {
        /// <summary>
        /// Get information on an ACL Role.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nomad = Pulumi.Nomad;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Nomad.GetAclRole.Invoke(new()
        ///     {
        ///         Id = "aa534e09-6a07-0a45-2295-a7f77063d429",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetAclRoleResult> InvokeAsync(GetAclRoleArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAclRoleResult>("nomad:index/getAclRole:getAclRole", args ?? new GetAclRoleArgs(), options.WithDefaults());

        /// <summary>
        /// Get information on an ACL Role.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nomad = Pulumi.Nomad;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Nomad.GetAclRole.Invoke(new()
        ///     {
        ///         Id = "aa534e09-6a07-0a45-2295-a7f77063d429",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetAclRoleResult> Invoke(GetAclRoleInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAclRoleResult>("nomad:index/getAclRole:getAclRole", args ?? new GetAclRoleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAclRoleArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// `(string)` The unique identifier of the ACL Role.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetAclRoleArgs()
        {
        }
        public static new GetAclRoleArgs Empty => new GetAclRoleArgs();
    }

    public sealed class GetAclRoleInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// `(string)` The unique identifier of the ACL Role.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetAclRoleInvokeArgs()
        {
        }
        public static new GetAclRoleInvokeArgs Empty => new GetAclRoleInvokeArgs();
    }


    [OutputType]
    public sealed class GetAclRoleResult
    {
        /// <summary>
        /// `(string)` - The description of the ACL Role.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// `(string)` - The ACL Role unique identifier.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// `(string)` - Unique name of the ACL role.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// `(set)` - The policies applied to the role.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAclRolePolicyResult> Policies;

        [OutputConstructor]
        private GetAclRoleResult(
            string description,

            string id,

            string name,

            ImmutableArray<Outputs.GetAclRolePolicyResult> policies)
        {
            Description = description;
            Id = id;
            Name = name;
            Policies = policies;
        }
    }
}
