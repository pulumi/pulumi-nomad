// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Nomad
{
    public static class GetScalingPolicy
    {
        /// <summary>
        /// Retrieve a Scaling Policy.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nomad = Pulumi.Nomad;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Nomad.GetScalingPolicy.Invoke(new()
        ///     {
        ///         Id = "ad19848d-1921-179c-affa-244a3543be88",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetScalingPolicyResult> InvokeAsync(GetScalingPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetScalingPolicyResult>("nomad:index/getScalingPolicy:getScalingPolicy", args ?? new GetScalingPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieve a Scaling Policy.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Nomad = Pulumi.Nomad;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Nomad.GetScalingPolicy.Invoke(new()
        ///     {
        ///         Id = "ad19848d-1921-179c-affa-244a3543be88",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetScalingPolicyResult> Invoke(GetScalingPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetScalingPolicyResult>("nomad:index/getScalingPolicy:getScalingPolicy", args ?? new GetScalingPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetScalingPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// `(string: &lt;required&gt;)` - The  ID of the scaling policy.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetScalingPolicyArgs()
        {
        }
        public static new GetScalingPolicyArgs Empty => new GetScalingPolicyArgs();
    }

    public sealed class GetScalingPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// `(string: &lt;required&gt;)` - The  ID of the scaling policy.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetScalingPolicyInvokeArgs()
        {
        }
        public static new GetScalingPolicyInvokeArgs Empty => new GetScalingPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetScalingPolicyResult
    {
        /// <summary>
        /// `(boolean)` - Whether or not the scaling policy is enabled.
        /// </summary>
        public readonly bool Enabled;
        public readonly string Id;
        /// <summary>
        /// `(integer)` - The maximum value set in the scaling policy.
        /// </summary>
        public readonly int Max;
        /// <summary>
        /// `(integer)` - The minimum value set in the scaling policy.
        /// </summary>
        public readonly int Min;
        /// <summary>
        /// `(string)` - The policy inside the scaling policy.
        /// </summary>
        public readonly string Policy;
        /// <summary>
        /// `(map[string]string)` - The scaling policy target.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Target;
        /// <summary>
        /// `(string)` - The scaling policy type.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetScalingPolicyResult(
            bool enabled,

            string id,

            int max,

            int min,

            string policy,

            ImmutableDictionary<string, string> target,

            string type)
        {
            Enabled = enabled;
            Id = id;
            Max = max;
            Min = min;
            Policy = policy;
            Target = target;
            Type = type;
        }
    }
}
