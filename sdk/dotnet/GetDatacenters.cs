// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Nomad
{
    public static class GetDatacenters
    {
        /// <summary>
        /// Retrieve a list of datacenters.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Nomad = Pulumi.Nomad;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var datacenters = Output.Create(Nomad.GetDatacenters.InvokeAsync(new Nomad.GetDatacentersArgs
        ///         {
        ///             IgnoreDownNodes = true,
        ///             Prefix = "prod",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetDatacentersResult> InvokeAsync(GetDatacentersArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetDatacentersResult>("nomad:index/getDatacenters:getDatacenters", args ?? new GetDatacentersArgs(), options.WithVersion());
    }


    public sealed class GetDatacentersArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// `(bool: false)`: An optional flag that, if set to `true` will ignore down nodes when compiling the list of datacenters.
        /// </summary>
        [Input("ignoreDownNodes")]
        public bool? IgnoreDownNodes { get; set; }

        /// <summary>
        /// `(string)`: An optional string to filter datacenters based on name prefix. If not provided, all datacenters are returned.
        /// </summary>
        [Input("prefix")]
        public string? Prefix { get; set; }

        public GetDatacentersArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetDatacentersResult
    {
        public readonly ImmutableArray<string> Datacenters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly bool? IgnoreDownNodes;
        public readonly string? Prefix;

        [OutputConstructor]
        private GetDatacentersResult(
            ImmutableArray<string> datacenters,

            string id,

            bool? ignoreDownNodes,

            string? prefix)
        {
            Datacenters = datacenters;
            Id = id;
            IgnoreDownNodes = ignoreDownNodes;
            Prefix = prefix;
        }
    }
}
