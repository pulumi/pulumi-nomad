// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Retrieve a list of Scaling Policies.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nomad from "@pulumi/nomad";
 *
 * const example = nomad.getScalingPolicies({
 *     jobId: "webapp",
 *     type: "horizontal",
 * });
 * ```
 */
export function getScalingPolicies(args?: GetScalingPoliciesArgs, opts?: pulumi.InvokeOptions): Promise<GetScalingPoliciesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nomad:index/getScalingPolicies:getScalingPolicies", {
        "jobId": args.jobId,
        "type": args.type,
    }, opts);
}

/**
 * A collection of arguments for invoking getScalingPolicies.
 */
export interface GetScalingPoliciesArgs {
    /**
     * `(string)` - An optional string to filter scaling policies based on the target job. If not provided, policies for all jobs are returned.
     */
    jobId?: string;
    /**
     * `(string)` - An optional string to filter scaling policies based on policy type. If not provided, policies of all types are returned.
     */
    type?: string;
}

/**
 * A collection of values returned by getScalingPolicies.
 */
export interface GetScalingPoliciesResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly jobId?: string;
    /**
     * `list of maps` - A list of scaling policies.
     */
    readonly policies: outputs.GetScalingPoliciesPolicy[];
    /**
     * `(string)` - The scaling policy type.
     */
    readonly type?: string;
}
/**
 * Retrieve a list of Scaling Policies.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nomad from "@pulumi/nomad";
 *
 * const example = nomad.getScalingPolicies({
 *     jobId: "webapp",
 *     type: "horizontal",
 * });
 * ```
 */
export function getScalingPoliciesOutput(args?: GetScalingPoliciesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetScalingPoliciesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("nomad:index/getScalingPolicies:getScalingPolicies", {
        "jobId": args.jobId,
        "type": args.type,
    }, opts);
}

/**
 * A collection of arguments for invoking getScalingPolicies.
 */
export interface GetScalingPoliciesOutputArgs {
    /**
     * `(string)` - An optional string to filter scaling policies based on the target job. If not provided, policies for all jobs are returned.
     */
    jobId?: pulumi.Input<string>;
    /**
     * `(string)` - An optional string to filter scaling policies based on policy type. If not provided, policies of all types are returned.
     */
    type?: pulumi.Input<string>;
}
