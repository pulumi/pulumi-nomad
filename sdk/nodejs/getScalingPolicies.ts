// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * Retrieve a list of Scaling Policies.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nomad from "@pulumi/nomad";
 *
 * const example = pulumi.output(nomad.getScalingPolicies({
 *     jobId: "webapp",
 *     type: "horizontal",
 * }));
 * ```
 */
export function getScalingPolicies(args?: GetScalingPoliciesArgs, opts?: pulumi.InvokeOptions): Promise<GetScalingPoliciesResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("nomad:index/getScalingPolicies:getScalingPolicies", {
        "jobId": args.jobId,
        "type": args.type,
    }, opts);
}

/**
 * A collection of arguments for invoking getScalingPolicies.
 */
export interface GetScalingPoliciesArgs {
    /**
     * `(string)` - An optional string to filter scaling policies based on the target job. If not provided, policies for all jobs are returned.
     */
    jobId?: string;
    /**
     * `(string)` - An optional string to filter scaling policies based on policy type. If not provided, policies of all types are returned.
     */
    type?: string;
}

/**
 * A collection of values returned by getScalingPolicies.
 */
export interface GetScalingPoliciesResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly jobId?: string;
    readonly policies: outputs.GetScalingPoliciesPolicy[];
    readonly type?: string;
}
