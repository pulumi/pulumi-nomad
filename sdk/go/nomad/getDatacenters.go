// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package nomad

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieve a list of datacenters.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-nomad/sdk/go/nomad"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		opt0 := true
// 		opt1 := "prod"
// 		_, err := nomad.GetDatacenters(ctx, &nomad.GetDatacentersArgs{
// 			IgnoreDownNodes: &opt0,
// 			Prefix:          &opt1,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetDatacenters(ctx *pulumi.Context, args *GetDatacentersArgs, opts ...pulumi.InvokeOption) (*GetDatacentersResult, error) {
	var rv GetDatacentersResult
	err := ctx.Invoke("nomad:index/getDatacenters:getDatacenters", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDatacenters.
type GetDatacentersArgs struct {
	// `(bool: false)`: An optional flag that, if set to `true` will ignore down nodes when compiling the list of datacenters.
	IgnoreDownNodes *bool `pulumi:"ignoreDownNodes"`
	// `(string)`: An optional string to filter datacenters based on name prefix. If not provided, all datacenters are returned.
	Prefix *string `pulumi:"prefix"`
}

// A collection of values returned by getDatacenters.
type GetDatacentersResult struct {
	Datacenters []string `pulumi:"datacenters"`
	// The provider-assigned unique ID for this managed resource.
	Id              string  `pulumi:"id"`
	IgnoreDownNodes *bool   `pulumi:"ignoreDownNodes"`
	Prefix          *string `pulumi:"prefix"`
}
