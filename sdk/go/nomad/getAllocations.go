// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nomad

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-nomad/sdk/v2/go/nomad/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieve a list of allocations from Nomad.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-nomad/sdk/v2/go/nomad"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := nomad.GetAllocations(ctx, &nomad.GetAllocationsArgs{
//				Filter: pulumi.StringRef("JobID == \"example\""),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func GetAllocations(ctx *pulumi.Context, args *GetAllocationsArgs, opts ...pulumi.InvokeOption) (*GetAllocationsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAllocationsResult
	err := ctx.Invoke("nomad:index/getAllocations:getAllocations", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAllocations.
type GetAllocationsArgs struct {
	// `(string: <optional>)` - Specifies the
	// [expression][nomadApiFilter] used to filter the results.
	Filter *string `pulumi:"filter"`
	// `(string: <optional>)` - Specifies a string to filter allocations
	// based on an ID prefix.
	Prefix *string `pulumi:"prefix"`
}

// A collection of values returned by getAllocations.
type GetAllocationsResult struct {
	// `(list of allocations)` - A list of allocations matching the
	// search criteria.
	Allocations []GetAllocationsAllocation `pulumi:"allocations"`
	Filter      *string                    `pulumi:"filter"`
	// The provider-assigned unique ID for this managed resource.
	Id     string  `pulumi:"id"`
	Prefix *string `pulumi:"prefix"`
}

func GetAllocationsOutput(ctx *pulumi.Context, args GetAllocationsOutputArgs, opts ...pulumi.InvokeOption) GetAllocationsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAllocationsResult, error) {
			args := v.(GetAllocationsArgs)
			r, err := GetAllocations(ctx, &args, opts...)
			var s GetAllocationsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetAllocationsResultOutput)
}

// A collection of arguments for invoking getAllocations.
type GetAllocationsOutputArgs struct {
	// `(string: <optional>)` - Specifies the
	// [expression][nomadApiFilter] used to filter the results.
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// `(string: <optional>)` - Specifies a string to filter allocations
	// based on an ID prefix.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
}

func (GetAllocationsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAllocationsArgs)(nil)).Elem()
}

// A collection of values returned by getAllocations.
type GetAllocationsResultOutput struct{ *pulumi.OutputState }

func (GetAllocationsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAllocationsResult)(nil)).Elem()
}

func (o GetAllocationsResultOutput) ToGetAllocationsResultOutput() GetAllocationsResultOutput {
	return o
}

func (o GetAllocationsResultOutput) ToGetAllocationsResultOutputWithContext(ctx context.Context) GetAllocationsResultOutput {
	return o
}

// `(list of allocations)` - A list of allocations matching the
// search criteria.
func (o GetAllocationsResultOutput) Allocations() GetAllocationsAllocationArrayOutput {
	return o.ApplyT(func(v GetAllocationsResult) []GetAllocationsAllocation { return v.Allocations }).(GetAllocationsAllocationArrayOutput)
}

func (o GetAllocationsResultOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAllocationsResult) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAllocationsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAllocationsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetAllocationsResultOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAllocationsResult) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAllocationsResultOutput{})
}
