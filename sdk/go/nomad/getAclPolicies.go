// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nomad

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-nomad/sdk/v2/go/nomad/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Retrieve a list of ACL Policies.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-nomad/sdk/v2/go/nomad"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := nomad.GetAclPolicies(ctx, &nomad.GetAclPoliciesArgs{
//				Prefix: pulumi.StringRef("prod"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetAclPolicies(ctx *pulumi.Context, args *GetAclPoliciesArgs, opts ...pulumi.InvokeOption) (*GetAclPoliciesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAclPoliciesResult
	err := ctx.Invoke("nomad:index/getAclPolicies:getAclPolicies", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAclPolicies.
type GetAclPoliciesArgs struct {
	// `(string)` An optional string to filter ACL policies based on name prefix. If not provided, all policies are returned.
	Prefix *string `pulumi:"prefix"`
}

// A collection of values returned by getAclPolicies.
type GetAclPoliciesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// `list of maps` a list of ACL policies.
	Policies []GetAclPoliciesPolicy `pulumi:"policies"`
	Prefix   *string                `pulumi:"prefix"`
}

func GetAclPoliciesOutput(ctx *pulumi.Context, args GetAclPoliciesOutputArgs, opts ...pulumi.InvokeOption) GetAclPoliciesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAclPoliciesResult, error) {
			args := v.(GetAclPoliciesArgs)
			r, err := GetAclPolicies(ctx, &args, opts...)
			var s GetAclPoliciesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetAclPoliciesResultOutput)
}

// A collection of arguments for invoking getAclPolicies.
type GetAclPoliciesOutputArgs struct {
	// `(string)` An optional string to filter ACL policies based on name prefix. If not provided, all policies are returned.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
}

func (GetAclPoliciesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAclPoliciesArgs)(nil)).Elem()
}

// A collection of values returned by getAclPolicies.
type GetAclPoliciesResultOutput struct{ *pulumi.OutputState }

func (GetAclPoliciesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAclPoliciesResult)(nil)).Elem()
}

func (o GetAclPoliciesResultOutput) ToGetAclPoliciesResultOutput() GetAclPoliciesResultOutput {
	return o
}

func (o GetAclPoliciesResultOutput) ToGetAclPoliciesResultOutputWithContext(ctx context.Context) GetAclPoliciesResultOutput {
	return o
}

func (o GetAclPoliciesResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetAclPoliciesResult] {
	return pulumix.Output[GetAclPoliciesResult]{
		OutputState: o.OutputState,
	}
}

// The provider-assigned unique ID for this managed resource.
func (o GetAclPoliciesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclPoliciesResult) string { return v.Id }).(pulumi.StringOutput)
}

// `list of maps` a list of ACL policies.
func (o GetAclPoliciesResultOutput) Policies() GetAclPoliciesPolicyArrayOutput {
	return o.ApplyT(func(v GetAclPoliciesResult) []GetAclPoliciesPolicy { return v.Policies }).(GetAclPoliciesPolicyArrayOutput)
}

func (o GetAclPoliciesResultOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAclPoliciesResult) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAclPoliciesResultOutput{})
}
