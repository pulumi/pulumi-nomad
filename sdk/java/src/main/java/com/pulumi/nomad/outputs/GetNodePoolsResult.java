// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.nomad.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.nomad.outputs.GetNodePoolsNodePool;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetNodePoolsResult {
    private @Nullable String filter;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return `(list of node pools)` - A list of node pools matching the
     * search criteria.
     * 
     */
    private List<GetNodePoolsNodePool> nodePools;
    private @Nullable String prefix;

    private GetNodePoolsResult() {}
    public Optional<String> filter() {
        return Optional.ofNullable(this.filter);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return `(list of node pools)` - A list of node pools matching the
     * search criteria.
     * 
     */
    public List<GetNodePoolsNodePool> nodePools() {
        return this.nodePools;
    }
    public Optional<String> prefix() {
        return Optional.ofNullable(this.prefix);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNodePoolsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String filter;
        private String id;
        private List<GetNodePoolsNodePool> nodePools;
        private @Nullable String prefix;
        public Builder() {}
        public Builder(GetNodePoolsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filter = defaults.filter;
    	      this.id = defaults.id;
    	      this.nodePools = defaults.nodePools;
    	      this.prefix = defaults.prefix;
        }

        @CustomType.Setter
        public Builder filter(@Nullable String filter) {

            this.filter = filter;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetNodePoolsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder nodePools(List<GetNodePoolsNodePool> nodePools) {
            if (nodePools == null) {
              throw new MissingRequiredPropertyException("GetNodePoolsResult", "nodePools");
            }
            this.nodePools = nodePools;
            return this;
        }
        public Builder nodePools(GetNodePoolsNodePool... nodePools) {
            return nodePools(List.of(nodePools));
        }
        @CustomType.Setter
        public Builder prefix(@Nullable String prefix) {

            this.prefix = prefix;
            return this;
        }
        public GetNodePoolsResult build() {
            final var _resultValue = new GetNodePoolsResult();
            _resultValue.filter = filter;
            _resultValue.id = id;
            _resultValue.nodePools = nodePools;
            _resultValue.prefix = prefix;
            return _resultValue;
        }
    }
}
