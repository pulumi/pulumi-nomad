// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.nomad;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.nomad.Utilities;
import com.pulumi.nomad.VariableArgs;
import com.pulumi.nomad.inputs.VariableState;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * Creating a variable in the default namespace:
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.nomad.Variable;
 * import com.pulumi.nomad.VariableArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new Variable(&#34;example&#34;, VariableArgs.builder()        
 *             .items(Map.of(&#34;example_key&#34;, &#34;example_value&#34;))
 *             .path(&#34;some/path/of/your/choosing&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * Creating a variable in a custom namespace:
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.nomad.Namespace;
 * import com.pulumi.nomad.NamespaceArgs;
 * import com.pulumi.nomad.Variable;
 * import com.pulumi.nomad.VariableArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleNamespace = new Namespace(&#34;exampleNamespace&#34;, NamespaceArgs.builder()        
 *             .description(&#34;Example namespace.&#34;)
 *             .build());
 * 
 *         var exampleVariable = new Variable(&#34;exampleVariable&#34;, VariableArgs.builder()        
 *             .path(&#34;some/path/of/your/choosing&#34;)
 *             .namespace(exampleNamespace.name())
 *             .items(Map.of(&#34;example_key&#34;, &#34;example_value&#34;))
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 */
@ResourceType(type="nomad:index/variable:Variable")
public class Variable extends com.pulumi.resources.CustomResource {
    /**
     * `(map[string]string: &lt;required&gt;)` - An arbitrary map of items to create in the variable.
     * 
     */
    @Export(name="items", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output<Map<String,Object>> items;

    /**
     * @return `(map[string]string: &lt;required&gt;)` - An arbitrary map of items to create in the variable.
     * 
     */
    public Output<Map<String,Object>> items() {
        return this.items;
    }
    /**
     * `(string: &#34;default&#34;)` - The namepsace to create the variable in.
     * 
     */
    @Export(name="namespace", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> namespace;

    /**
     * @return `(string: &#34;default&#34;)` - The namepsace to create the variable in.
     * 
     */
    public Output<Optional<String>> namespace() {
        return Codegen.optional(this.namespace);
    }
    /**
     * `(string: &lt;required&gt;)` - A unique path to create the variable at.
     * 
     */
    @Export(name="path", refs={String.class}, tree="[0]")
    private Output<String> path;

    /**
     * @return `(string: &lt;required&gt;)` - A unique path to create the variable at.
     * 
     */
    public Output<String> path() {
        return this.path;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Variable(String name) {
        this(name, VariableArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Variable(String name, VariableArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Variable(String name, VariableArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("nomad:index/variable:Variable", name, args == null ? VariableArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Variable(String name, Output<String> id, @Nullable VariableState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("nomad:index/variable:Variable", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "items"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Variable get(String name, Output<String> id, @Nullable VariableState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Variable(name, id, state, options);
    }
}
