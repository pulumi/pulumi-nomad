// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.nomad.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.nomad.inputs.ExternalVolumeTopologyRequestRequiredTopologyArgs;
import java.util.List;
import java.util.Objects;


public final class ExternalVolumeTopologyRequestRequiredArgs extends com.pulumi.resources.ResourceArgs {

    public static final ExternalVolumeTopologyRequestRequiredArgs Empty = new ExternalVolumeTopologyRequestRequiredArgs();

    @Import(name="topologies", required=true)
    private Output<List<ExternalVolumeTopologyRequestRequiredTopologyArgs>> topologies;

    public Output<List<ExternalVolumeTopologyRequestRequiredTopologyArgs>> topologies() {
        return this.topologies;
    }

    private ExternalVolumeTopologyRequestRequiredArgs() {}

    private ExternalVolumeTopologyRequestRequiredArgs(ExternalVolumeTopologyRequestRequiredArgs $) {
        this.topologies = $.topologies;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ExternalVolumeTopologyRequestRequiredArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ExternalVolumeTopologyRequestRequiredArgs $;

        public Builder() {
            $ = new ExternalVolumeTopologyRequestRequiredArgs();
        }

        public Builder(ExternalVolumeTopologyRequestRequiredArgs defaults) {
            $ = new ExternalVolumeTopologyRequestRequiredArgs(Objects.requireNonNull(defaults));
        }

        public Builder topologies(Output<List<ExternalVolumeTopologyRequestRequiredTopologyArgs>> topologies) {
            $.topologies = topologies;
            return this;
        }

        public Builder topologies(List<ExternalVolumeTopologyRequestRequiredTopologyArgs> topologies) {
            return topologies(Output.of(topologies));
        }

        public Builder topologies(ExternalVolumeTopologyRequestRequiredTopologyArgs... topologies) {
            return topologies(List.of(topologies));
        }

        public ExternalVolumeTopologyRequestRequiredArgs build() {
            $.topologies = Objects.requireNonNull($.topologies, "expected parameter 'topologies' to be non-null");
            return $;
        }
    }

}
