// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.nomad.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.nomad.outputs.GetJobTaskGroupTask;
import com.pulumi.nomad.outputs.GetJobTaskGroupVolume;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetJobTaskGroup {
    private Integer count;
    private Map<String,String> meta;
    /**
     * @return `(string)` Name of the job.
     * 
     */
    private String name;
    private List<GetJobTaskGroupTask> tasks;
    private List<GetJobTaskGroupVolume> volumes;

    private GetJobTaskGroup() {}
    public Integer count() {
        return this.count;
    }
    public Map<String,String> meta() {
        return this.meta;
    }
    /**
     * @return `(string)` Name of the job.
     * 
     */
    public String name() {
        return this.name;
    }
    public List<GetJobTaskGroupTask> tasks() {
        return this.tasks;
    }
    public List<GetJobTaskGroupVolume> volumes() {
        return this.volumes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetJobTaskGroup defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer count;
        private Map<String,String> meta;
        private String name;
        private List<GetJobTaskGroupTask> tasks;
        private List<GetJobTaskGroupVolume> volumes;
        public Builder() {}
        public Builder(GetJobTaskGroup defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.count = defaults.count;
    	      this.meta = defaults.meta;
    	      this.name = defaults.name;
    	      this.tasks = defaults.tasks;
    	      this.volumes = defaults.volumes;
        }

        @CustomType.Setter
        public Builder count(Integer count) {
            if (count == null) {
              throw new MissingRequiredPropertyException("GetJobTaskGroup", "count");
            }
            this.count = count;
            return this;
        }
        @CustomType.Setter
        public Builder meta(Map<String,String> meta) {
            if (meta == null) {
              throw new MissingRequiredPropertyException("GetJobTaskGroup", "meta");
            }
            this.meta = meta;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetJobTaskGroup", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder tasks(List<GetJobTaskGroupTask> tasks) {
            if (tasks == null) {
              throw new MissingRequiredPropertyException("GetJobTaskGroup", "tasks");
            }
            this.tasks = tasks;
            return this;
        }
        public Builder tasks(GetJobTaskGroupTask... tasks) {
            return tasks(List.of(tasks));
        }
        @CustomType.Setter
        public Builder volumes(List<GetJobTaskGroupVolume> volumes) {
            if (volumes == null) {
              throw new MissingRequiredPropertyException("GetJobTaskGroup", "volumes");
            }
            this.volumes = volumes;
            return this;
        }
        public Builder volumes(GetJobTaskGroupVolume... volumes) {
            return volumes(List.of(volumes));
        }
        public GetJobTaskGroup build() {
            final var _resultValue = new GetJobTaskGroup();
            _resultValue.count = count;
            _resultValue.meta = meta;
            _resultValue.name = name;
            _resultValue.tasks = tasks;
            _resultValue.volumes = volumes;
            return _resultValue;
        }
    }
}
