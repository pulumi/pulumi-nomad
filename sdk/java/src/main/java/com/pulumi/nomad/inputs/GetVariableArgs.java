// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.nomad.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetVariableArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetVariableArgs Empty = new GetVariableArgs();

    /**
     * `(string: &#34;default&#34;)` - The namepsace in which the variable exists.
     * 
     */
    @Import(name="namespace")
    private @Nullable Output<String> namespace;

    /**
     * @return `(string: &#34;default&#34;)` - The namepsace in which the variable exists.
     * 
     */
    public Optional<Output<String>> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    /**
     * `(string)` - Path to the existing variable.
     * 
     */
    @Import(name="path", required=true)
    private Output<String> path;

    /**
     * @return `(string)` - Path to the existing variable.
     * 
     */
    public Output<String> path() {
        return this.path;
    }

    private GetVariableArgs() {}

    private GetVariableArgs(GetVariableArgs $) {
        this.namespace = $.namespace;
        this.path = $.path;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetVariableArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetVariableArgs $;

        public Builder() {
            $ = new GetVariableArgs();
        }

        public Builder(GetVariableArgs defaults) {
            $ = new GetVariableArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param namespace `(string: &#34;default&#34;)` - The namepsace in which the variable exists.
         * 
         * @return builder
         * 
         */
        public Builder namespace(@Nullable Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace `(string: &#34;default&#34;)` - The namepsace in which the variable exists.
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        /**
         * @param path `(string)` - Path to the existing variable.
         * 
         * @return builder
         * 
         */
        public Builder path(Output<String> path) {
            $.path = path;
            return this;
        }

        /**
         * @param path `(string)` - Path to the existing variable.
         * 
         * @return builder
         * 
         */
        public Builder path(String path) {
            return path(Output.of(path));
        }

        public GetVariableArgs build() {
            if ($.path == null) {
                throw new MissingRequiredPropertyException("GetVariableArgs", "path");
            }
            return $;
        }
    }

}
