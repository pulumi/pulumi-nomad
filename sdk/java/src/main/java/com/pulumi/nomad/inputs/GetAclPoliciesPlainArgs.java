// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.nomad.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetAclPoliciesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAclPoliciesPlainArgs Empty = new GetAclPoliciesPlainArgs();

    /**
     * `(string)` An optional string to filter ACL policies based on name prefix. If not provided, all policies are returned.
     * 
     */
    @Import(name="prefix")
    private @Nullable String prefix;

    /**
     * @return `(string)` An optional string to filter ACL policies based on name prefix. If not provided, all policies are returned.
     * 
     */
    public Optional<String> prefix() {
        return Optional.ofNullable(this.prefix);
    }

    private GetAclPoliciesPlainArgs() {}

    private GetAclPoliciesPlainArgs(GetAclPoliciesPlainArgs $) {
        this.prefix = $.prefix;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAclPoliciesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAclPoliciesPlainArgs $;

        public Builder() {
            $ = new GetAclPoliciesPlainArgs();
        }

        public Builder(GetAclPoliciesPlainArgs defaults) {
            $ = new GetAclPoliciesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param prefix `(string)` An optional string to filter ACL policies based on name prefix. If not provided, all policies are returned.
         * 
         * @return builder
         * 
         */
        public Builder prefix(@Nullable String prefix) {
            $.prefix = prefix;
            return this;
        }

        public GetAclPoliciesPlainArgs build() {
            return $;
        }
    }

}
