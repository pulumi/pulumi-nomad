// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.nomad.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SentinelPolicyState extends com.pulumi.resources.ResourceArgs {

    public static final SentinelPolicyState Empty = new SentinelPolicyState();

    /**
     * `(string: &#34;&#34;)` - A description of the policy.
     * 
     * [scope]: https://www.nomadproject.io/guides/sentinel-policy.html#policy-scope
     * [enforcement-level]: https://www.nomadproject.io/guides/sentinel-policy.html#enforcement-level
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return `(string: &#34;&#34;)` - A description of the policy.
     * 
     * [scope]: https://www.nomadproject.io/guides/sentinel-policy.html#policy-scope
     * [enforcement-level]: https://www.nomadproject.io/guides/sentinel-policy.html#enforcement-level
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * `(strings: &lt;required&gt;)` - The [enforcement level][enforcement-level]
     * for this policy.
     * 
     */
    @Import(name="enforcementLevel")
    private @Nullable Output<String> enforcementLevel;

    /**
     * @return `(strings: &lt;required&gt;)` - The [enforcement level][enforcement-level]
     * for this policy.
     * 
     */
    public Optional<Output<String>> enforcementLevel() {
        return Optional.ofNullable(this.enforcementLevel);
    }

    /**
     * `(string: &lt;required&gt;)` - A unique name for the policy.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return `(string: &lt;required&gt;)` - A unique name for the policy.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * `(string: &lt;required&gt;)` - The contents of the policy to register.
     * 
     */
    @Import(name="policy")
    private @Nullable Output<String> policy;

    /**
     * @return `(string: &lt;required&gt;)` - The contents of the policy to register.
     * 
     */
    public Optional<Output<String>> policy() {
        return Optional.ofNullable(this.policy);
    }

    /**
     * `(strings: &lt;required&gt;)` - The [scope][scope] for this policy.
     * 
     */
    @Import(name="scope")
    private @Nullable Output<String> scope;

    /**
     * @return `(strings: &lt;required&gt;)` - The [scope][scope] for this policy.
     * 
     */
    public Optional<Output<String>> scope() {
        return Optional.ofNullable(this.scope);
    }

    private SentinelPolicyState() {}

    private SentinelPolicyState(SentinelPolicyState $) {
        this.description = $.description;
        this.enforcementLevel = $.enforcementLevel;
        this.name = $.name;
        this.policy = $.policy;
        this.scope = $.scope;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SentinelPolicyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SentinelPolicyState $;

        public Builder() {
            $ = new SentinelPolicyState();
        }

        public Builder(SentinelPolicyState defaults) {
            $ = new SentinelPolicyState(Objects.requireNonNull(defaults));
        }

        /**
         * @param description `(string: &#34;&#34;)` - A description of the policy.
         * 
         * [scope]: https://www.nomadproject.io/guides/sentinel-policy.html#policy-scope
         * [enforcement-level]: https://www.nomadproject.io/guides/sentinel-policy.html#enforcement-level
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description `(string: &#34;&#34;)` - A description of the policy.
         * 
         * [scope]: https://www.nomadproject.io/guides/sentinel-policy.html#policy-scope
         * [enforcement-level]: https://www.nomadproject.io/guides/sentinel-policy.html#enforcement-level
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param enforcementLevel `(strings: &lt;required&gt;)` - The [enforcement level][enforcement-level]
         * for this policy.
         * 
         * @return builder
         * 
         */
        public Builder enforcementLevel(@Nullable Output<String> enforcementLevel) {
            $.enforcementLevel = enforcementLevel;
            return this;
        }

        /**
         * @param enforcementLevel `(strings: &lt;required&gt;)` - The [enforcement level][enforcement-level]
         * for this policy.
         * 
         * @return builder
         * 
         */
        public Builder enforcementLevel(String enforcementLevel) {
            return enforcementLevel(Output.of(enforcementLevel));
        }

        /**
         * @param name `(string: &lt;required&gt;)` - A unique name for the policy.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name `(string: &lt;required&gt;)` - A unique name for the policy.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param policy `(string: &lt;required&gt;)` - The contents of the policy to register.
         * 
         * @return builder
         * 
         */
        public Builder policy(@Nullable Output<String> policy) {
            $.policy = policy;
            return this;
        }

        /**
         * @param policy `(string: &lt;required&gt;)` - The contents of the policy to register.
         * 
         * @return builder
         * 
         */
        public Builder policy(String policy) {
            return policy(Output.of(policy));
        }

        /**
         * @param scope `(strings: &lt;required&gt;)` - The [scope][scope] for this policy.
         * 
         * @return builder
         * 
         */
        public Builder scope(@Nullable Output<String> scope) {
            $.scope = scope;
            return this;
        }

        /**
         * @param scope `(strings: &lt;required&gt;)` - The [scope][scope] for this policy.
         * 
         * @return builder
         * 
         */
        public Builder scope(String scope) {
            return scope(Output.of(scope));
        }

        public SentinelPolicyState build() {
            return $;
        }
    }

}
