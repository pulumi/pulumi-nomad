// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.nomad;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.nomad.AclTokenArgs;
import com.pulumi.nomad.Utilities;
import com.pulumi.nomad.inputs.AclTokenState;
import com.pulumi.nomad.outputs.AclTokenRole;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * Creating a token with limited policies:
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.nomad.AclToken;
 * import com.pulumi.nomad.AclTokenArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var dakota = new AclToken(&#34;dakota&#34;, AclTokenArgs.builder()        
 *             .name(&#34;Dakota&#34;)
 *             .type(&#34;client&#34;)
 *             .policies(            
 *                 &#34;dev&#34;,
 *                 &#34;qa&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * Creating a global token that will be replicated to all regions:
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.nomad.AclToken;
 * import com.pulumi.nomad.AclTokenArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var dakota = new AclToken(&#34;dakota&#34;, AclTokenArgs.builder()        
 *             .name(&#34;Dakota&#34;)
 *             .type(&#34;client&#34;)
 *             .policies(            
 *                 &#34;dev&#34;,
 *                 &#34;qa&#34;)
 *             .global(true)
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * Creating a token with full access to the cluster:
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.nomad.AclToken;
 * import com.pulumi.nomad.AclTokenArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var iman = new AclToken(&#34;iman&#34;, AclTokenArgs.builder()        
 *             .name(&#34;Iman&#34;)
 *             .type(&#34;management&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * Accessing the token:
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.nomad.AclToken;
 * import com.pulumi.nomad.AclTokenArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var token = new AclToken(&#34;token&#34;, AclTokenArgs.builder()        
 *             .type(&#34;client&#34;)
 *             .policies(&#34;dev&#34;)
 *             .build());
 * 
 *         ctx.export(&#34;nomadToken&#34;, token.secretId());
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 */
@ResourceType(type="nomad:index/aclToken:AclToken")
public class AclToken extends com.pulumi.resources.CustomResource {
    /**
     * `(string)` - A non-sensitive identifier for this token that
     * can be logged and shared safely without granting any access to the cluster.
     * 
     */
    @Export(name="accessorId", refs={String.class}, tree="[0]")
    private Output<String> accessorId;

    /**
     * @return `(string)` - A non-sensitive identifier for this token that
     * can be logged and shared safely without granting any access to the cluster.
     * 
     */
    public Output<String> accessorId() {
        return this.accessorId;
    }
    /**
     * `(string)` - The timestamp the token was created.
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return `(string)` - The timestamp the token was created.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * `(string)` - The timestamp after which the token is
     * considered expired and eligible for destruction.
     * 
     */
    @Export(name="expirationTime", refs={String.class}, tree="[0]")
    private Output<String> expirationTime;

    /**
     * @return `(string)` - The timestamp after which the token is
     * considered expired and eligible for destruction.
     * 
     */
    public Output<String> expirationTime() {
        return this.expirationTime;
    }
    /**
     * `(string: &#34;&#34;)` - Provides a TTL for the token in the form of
     * a time duration such as `&#34;5m&#34;` or `&#34;1h&#34;`.
     * 
     * In addition to the above arguments, the following attributes are exported and
     * can be referenced:
     * 
     */
    @Export(name="expirationTtl", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> expirationTtl;

    /**
     * @return `(string: &#34;&#34;)` - Provides a TTL for the token in the form of
     * a time duration such as `&#34;5m&#34;` or `&#34;1h&#34;`.
     * 
     * In addition to the above arguments, the following attributes are exported and
     * can be referenced:
     * 
     */
    public Output<Optional<String>> expirationTtl() {
        return Codegen.optional(this.expirationTtl);
    }
    /**
     * `(bool: false)` - Whether the token should be replicated to all
     * regions, or if it will only be used in the region it was created in.
     * 
     */
    @Export(name="global", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> global;

    /**
     * @return `(bool: false)` - Whether the token should be replicated to all
     * regions, or if it will only be used in the region it was created in.
     * 
     */
    public Output<Optional<Boolean>> global() {
        return Codegen.optional(this.global);
    }
    /**
     * `(string: &#34;&#34;)` - A human-friendly name for this token.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return `(string: &#34;&#34;)` - A human-friendly name for this token.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * `(set: [])` - A set of policy names to associate with this
     * token. Must be set on `client`-type tokens, must not be set on
     * `management`-type tokens. Policies do not need to exist before being
     * used here.
     * 
     */
    @Export(name="policies", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> policies;

    /**
     * @return `(set: [])` - A set of policy names to associate with this
     * token. Must be set on `client`-type tokens, must not be set on
     * `management`-type tokens. Policies do not need to exist before being
     * used here.
     * 
     */
    public Output<Optional<List<String>>> policies() {
        return Codegen.optional(this.policies);
    }
    /**
     * `(set: [])` - The list of roles attached to the token. Each entry has
     * `name` and `id` attributes. It may be used multiple times.
     * 
     */
    @Export(name="roles", refs={List.class,AclTokenRole.class}, tree="[0,1]")
    private Output</* @Nullable */ List<AclTokenRole>> roles;

    /**
     * @return `(set: [])` - The list of roles attached to the token. Each entry has
     * `name` and `id` attributes. It may be used multiple times.
     * 
     */
    public Output<Optional<List<AclTokenRole>>> roles() {
        return Codegen.optional(this.roles);
    }
    /**
     * `(string)` - The token value itself, which is presented for
     * access to the cluster.
     * 
     */
    @Export(name="secretId", refs={String.class}, tree="[0]")
    private Output<String> secretId;

    /**
     * @return `(string)` - The token value itself, which is presented for
     * access to the cluster.
     * 
     */
    public Output<String> secretId() {
        return this.secretId;
    }
    /**
     * `(string: &lt;required&gt;)` - The type of token this is. Use `client`
     * for tokens that will have policies associated with them. Use `management`
     * for tokens that can perform any action.
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return `(string: &lt;required&gt;)` - The type of token this is. Use `client`
     * for tokens that will have policies associated with them. Use `management`
     * for tokens that can perform any action.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AclToken(String name) {
        this(name, AclTokenArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AclToken(String name, AclTokenArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AclToken(String name, AclTokenArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("nomad:index/aclToken:AclToken", name, args == null ? AclTokenArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private AclToken(String name, Output<String> id, @Nullable AclTokenState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("nomad:index/aclToken:AclToken", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "secretId"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AclToken get(String name, Output<String> id, @Nullable AclTokenState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AclToken(name, id, state, options);
    }
}
