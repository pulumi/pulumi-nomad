// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.nomad.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetDynamicHostVolumePlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDynamicHostVolumePlainArgs Empty = new GetDynamicHostVolumePlainArgs();

    /**
     * `(string)` - the ID of the volume
     * 
     */
    @Import(name="id", required=true)
    private String id;

    /**
     * @return `(string)` - the ID of the volume
     * 
     */
    public String id() {
        return this.id;
    }

    /**
     * `(string)` - the namespace of the volume. Defaults to `&#34;default&#34;`
     * 
     */
    @Import(name="namespace")
    private @Nullable String namespace;

    /**
     * @return `(string)` - the namespace of the volume. Defaults to `&#34;default&#34;`
     * 
     */
    public Optional<String> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    private GetDynamicHostVolumePlainArgs() {}

    private GetDynamicHostVolumePlainArgs(GetDynamicHostVolumePlainArgs $) {
        this.id = $.id;
        this.namespace = $.namespace;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDynamicHostVolumePlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDynamicHostVolumePlainArgs $;

        public Builder() {
            $ = new GetDynamicHostVolumePlainArgs();
        }

        public Builder(GetDynamicHostVolumePlainArgs defaults) {
            $ = new GetDynamicHostVolumePlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id `(string)` - the ID of the volume
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            $.id = id;
            return this;
        }

        /**
         * @param namespace `(string)` - the namespace of the volume. Defaults to `&#34;default&#34;`
         * 
         * @return builder
         * 
         */
        public Builder namespace(@Nullable String namespace) {
            $.namespace = namespace;
            return this;
        }

        public GetDynamicHostVolumePlainArgs build() {
            if ($.id == null) {
                throw new MissingRequiredPropertyException("GetDynamicHostVolumePlainArgs", "id");
            }
            return $;
        }
    }

}
