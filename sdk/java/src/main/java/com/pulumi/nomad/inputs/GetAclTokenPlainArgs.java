// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.nomad.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetAclTokenPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAclTokenPlainArgs Empty = new GetAclTokenPlainArgs();

    /**
     * `(string)` Non-sensitive identifier for this token.
     * 
     */
    @Import(name="accessorId", required=true)
    private String accessorId;

    /**
     * @return `(string)` Non-sensitive identifier for this token.
     * 
     */
    public String accessorId() {
        return this.accessorId;
    }

    private GetAclTokenPlainArgs() {}

    private GetAclTokenPlainArgs(GetAclTokenPlainArgs $) {
        this.accessorId = $.accessorId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAclTokenPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAclTokenPlainArgs $;

        public Builder() {
            $ = new GetAclTokenPlainArgs();
        }

        public Builder(GetAclTokenPlainArgs defaults) {
            $ = new GetAclTokenPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessorId `(string)` Non-sensitive identifier for this token.
         * 
         * @return builder
         * 
         */
        public Builder accessorId(String accessorId) {
            $.accessorId = accessorId;
            return this;
        }

        public GetAclTokenPlainArgs build() {
            if ($.accessorId == null) {
                throw new MissingRequiredPropertyException("GetAclTokenPlainArgs", "accessorId");
            }
            return $;
        }
    }

}
