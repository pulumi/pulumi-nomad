// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.nomad;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.nomad.inputs.AclPolicyJobAclArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AclPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final AclPolicyArgs Empty = new AclPolicyArgs();

    /**
     * `(string: &#34;&#34;)` - A description of the policy.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return `(string: &#34;&#34;)` - A description of the policy.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * `(``JobACL``: &lt;optional&gt;)` - Options for assigning the
     * ACL rules to a job, group, or task.
     * 
     */
    @Import(name="jobAcl")
    private @Nullable Output<AclPolicyJobAclArgs> jobAcl;

    /**
     * @return `(``JobACL``: &lt;optional&gt;)` - Options for assigning the
     * ACL rules to a job, group, or task.
     * 
     */
    public Optional<Output<AclPolicyJobAclArgs>> jobAcl() {
        return Optional.ofNullable(this.jobAcl);
    }

    /**
     * `(string: &lt;required&gt;)` - A unique name for the policy.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return `(string: &lt;required&gt;)` - A unique name for the policy.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * `(string: &lt;required&gt;)` - The contents of the policy to register,
     * as HCL or JSON.
     * 
     */
    @Import(name="rulesHcl", required=true)
    private Output<String> rulesHcl;

    /**
     * @return `(string: &lt;required&gt;)` - The contents of the policy to register,
     * as HCL or JSON.
     * 
     */
    public Output<String> rulesHcl() {
        return this.rulesHcl;
    }

    private AclPolicyArgs() {}

    private AclPolicyArgs(AclPolicyArgs $) {
        this.description = $.description;
        this.jobAcl = $.jobAcl;
        this.name = $.name;
        this.rulesHcl = $.rulesHcl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AclPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AclPolicyArgs $;

        public Builder() {
            $ = new AclPolicyArgs();
        }

        public Builder(AclPolicyArgs defaults) {
            $ = new AclPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description `(string: &#34;&#34;)` - A description of the policy.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description `(string: &#34;&#34;)` - A description of the policy.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param jobAcl `(``JobACL``: &lt;optional&gt;)` - Options for assigning the
         * ACL rules to a job, group, or task.
         * 
         * @return builder
         * 
         */
        public Builder jobAcl(@Nullable Output<AclPolicyJobAclArgs> jobAcl) {
            $.jobAcl = jobAcl;
            return this;
        }

        /**
         * @param jobAcl `(``JobACL``: &lt;optional&gt;)` - Options for assigning the
         * ACL rules to a job, group, or task.
         * 
         * @return builder
         * 
         */
        public Builder jobAcl(AclPolicyJobAclArgs jobAcl) {
            return jobAcl(Output.of(jobAcl));
        }

        /**
         * @param name `(string: &lt;required&gt;)` - A unique name for the policy.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name `(string: &lt;required&gt;)` - A unique name for the policy.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param rulesHcl `(string: &lt;required&gt;)` - The contents of the policy to register,
         * as HCL or JSON.
         * 
         * @return builder
         * 
         */
        public Builder rulesHcl(Output<String> rulesHcl) {
            $.rulesHcl = rulesHcl;
            return this;
        }

        /**
         * @param rulesHcl `(string: &lt;required&gt;)` - The contents of the policy to register,
         * as HCL or JSON.
         * 
         * @return builder
         * 
         */
        public Builder rulesHcl(String rulesHcl) {
            return rulesHcl(Output.of(rulesHcl));
        }

        public AclPolicyArgs build() {
            if ($.rulesHcl == null) {
                throw new MissingRequiredPropertyException("AclPolicyArgs", "rulesHcl");
            }
            return $;
        }
    }

}
