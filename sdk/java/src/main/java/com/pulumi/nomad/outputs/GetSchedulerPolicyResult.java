// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.nomad.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetSchedulerPolicyResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private Boolean memoryOversubscriptionEnabled;
    private Map<String,Boolean> preemptionConfig;
    private String schedulerAlgorithm;

    private GetSchedulerPolicyResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Boolean memoryOversubscriptionEnabled() {
        return this.memoryOversubscriptionEnabled;
    }
    public Map<String,Boolean> preemptionConfig() {
        return this.preemptionConfig;
    }
    public String schedulerAlgorithm() {
        return this.schedulerAlgorithm;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSchedulerPolicyResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private Boolean memoryOversubscriptionEnabled;
        private Map<String,Boolean> preemptionConfig;
        private String schedulerAlgorithm;
        public Builder() {}
        public Builder(GetSchedulerPolicyResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.memoryOversubscriptionEnabled = defaults.memoryOversubscriptionEnabled;
    	      this.preemptionConfig = defaults.preemptionConfig;
    	      this.schedulerAlgorithm = defaults.schedulerAlgorithm;
        }

        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder memoryOversubscriptionEnabled(Boolean memoryOversubscriptionEnabled) {
            this.memoryOversubscriptionEnabled = Objects.requireNonNull(memoryOversubscriptionEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder preemptionConfig(Map<String,Boolean> preemptionConfig) {
            this.preemptionConfig = Objects.requireNonNull(preemptionConfig);
            return this;
        }
        @CustomType.Setter
        public Builder schedulerAlgorithm(String schedulerAlgorithm) {
            this.schedulerAlgorithm = Objects.requireNonNull(schedulerAlgorithm);
            return this;
        }
        public GetSchedulerPolicyResult build() {
            final var o = new GetSchedulerPolicyResult();
            o.id = id;
            o.memoryOversubscriptionEnabled = memoryOversubscriptionEnabled;
            o.preemptionConfig = preemptionConfig;
            o.schedulerAlgorithm = schedulerAlgorithm;
            return o;
        }
    }
}
