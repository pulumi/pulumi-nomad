// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.nomad.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetPluginPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetPluginPlainArgs Empty = new GetPluginPlainArgs();

    @Import(name="pluginId", required=true)
    private String pluginId;

    public String pluginId() {
        return this.pluginId;
    }

    @Import(name="waitForHealthy")
    private @Nullable Boolean waitForHealthy;

    public Optional<Boolean> waitForHealthy() {
        return Optional.ofNullable(this.waitForHealthy);
    }

    @Import(name="waitForRegistration")
    private @Nullable Boolean waitForRegistration;

    public Optional<Boolean> waitForRegistration() {
        return Optional.ofNullable(this.waitForRegistration);
    }

    private GetPluginPlainArgs() {}

    private GetPluginPlainArgs(GetPluginPlainArgs $) {
        this.pluginId = $.pluginId;
        this.waitForHealthy = $.waitForHealthy;
        this.waitForRegistration = $.waitForRegistration;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPluginPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPluginPlainArgs $;

        public Builder() {
            $ = new GetPluginPlainArgs();
        }

        public Builder(GetPluginPlainArgs defaults) {
            $ = new GetPluginPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder pluginId(String pluginId) {
            $.pluginId = pluginId;
            return this;
        }

        public Builder waitForHealthy(@Nullable Boolean waitForHealthy) {
            $.waitForHealthy = waitForHealthy;
            return this;
        }

        public Builder waitForRegistration(@Nullable Boolean waitForRegistration) {
            $.waitForRegistration = waitForRegistration;
            return this;
        }

        public GetPluginPlainArgs build() {
            $.pluginId = Objects.requireNonNull($.pluginId, "expected parameter 'pluginId' to be non-null");
            return $;
        }
    }

}
