// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.nomad.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.nomad.inputs.QuoteSpecificationLimitArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class QuoteSpecificationState extends com.pulumi.resources.ResourceArgs {

    public static final QuoteSpecificationState Empty = new QuoteSpecificationState();

    /**
     * `(string: &#34;&#34;)` - A description of the quota specification.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return `(string: &#34;&#34;)` - A description of the quota specification.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * `(block: &lt;required&gt;)` - A block of quota limits to enforce. Can
     * be repeated. See below for the structure of this block.
     * 
     */
    @Import(name="limits")
    private @Nullable Output<List<QuoteSpecificationLimitArgs>> limits;

    /**
     * @return `(block: &lt;required&gt;)` - A block of quota limits to enforce. Can
     * be repeated. See below for the structure of this block.
     * 
     */
    public Optional<Output<List<QuoteSpecificationLimitArgs>>> limits() {
        return Optional.ofNullable(this.limits);
    }

    /**
     * `(string: &lt;required&gt;)` - A unique name for the quota specification.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return `(string: &lt;required&gt;)` - A unique name for the quota specification.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private QuoteSpecificationState() {}

    private QuoteSpecificationState(QuoteSpecificationState $) {
        this.description = $.description;
        this.limits = $.limits;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(QuoteSpecificationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private QuoteSpecificationState $;

        public Builder() {
            $ = new QuoteSpecificationState();
        }

        public Builder(QuoteSpecificationState defaults) {
            $ = new QuoteSpecificationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param description `(string: &#34;&#34;)` - A description of the quota specification.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description `(string: &#34;&#34;)` - A description of the quota specification.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param limits `(block: &lt;required&gt;)` - A block of quota limits to enforce. Can
         * be repeated. See below for the structure of this block.
         * 
         * @return builder
         * 
         */
        public Builder limits(@Nullable Output<List<QuoteSpecificationLimitArgs>> limits) {
            $.limits = limits;
            return this;
        }

        /**
         * @param limits `(block: &lt;required&gt;)` - A block of quota limits to enforce. Can
         * be repeated. See below for the structure of this block.
         * 
         * @return builder
         * 
         */
        public Builder limits(List<QuoteSpecificationLimitArgs> limits) {
            return limits(Output.of(limits));
        }

        /**
         * @param limits `(block: &lt;required&gt;)` - A block of quota limits to enforce. Can
         * be repeated. See below for the structure of this block.
         * 
         * @return builder
         * 
         */
        public Builder limits(QuoteSpecificationLimitArgs... limits) {
            return limits(List.of(limits));
        }

        /**
         * @param name `(string: &lt;required&gt;)` - A unique name for the quota specification.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name `(string: &lt;required&gt;)` - A unique name for the quota specification.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public QuoteSpecificationState build() {
            return $;
        }
    }

}
