// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.nomad.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NamespaceCapabilitiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final NamespaceCapabilitiesArgs Empty = new NamespaceCapabilitiesArgs();

    /**
     * `([]string: &lt;optional&gt;)` - Task drivers disabled for the namespace.
     * 
     */
    @Import(name="disabledTaskDrivers")
    private @Nullable Output<List<String>> disabledTaskDrivers;

    /**
     * @return `([]string: &lt;optional&gt;)` - Task drivers disabled for the namespace.
     * 
     */
    public Optional<Output<List<String>>> disabledTaskDrivers() {
        return Optional.ofNullable(this.disabledTaskDrivers);
    }

    /**
     * `([]string: &lt;optional&gt;)` - Task drivers enabled for the namespace.
     * 
     */
    @Import(name="enabledTaskDrivers")
    private @Nullable Output<List<String>> enabledTaskDrivers;

    /**
     * @return `([]string: &lt;optional&gt;)` - Task drivers enabled for the namespace.
     * 
     */
    public Optional<Output<List<String>>> enabledTaskDrivers() {
        return Optional.ofNullable(this.enabledTaskDrivers);
    }

    private NamespaceCapabilitiesArgs() {}

    private NamespaceCapabilitiesArgs(NamespaceCapabilitiesArgs $) {
        this.disabledTaskDrivers = $.disabledTaskDrivers;
        this.enabledTaskDrivers = $.enabledTaskDrivers;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NamespaceCapabilitiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NamespaceCapabilitiesArgs $;

        public Builder() {
            $ = new NamespaceCapabilitiesArgs();
        }

        public Builder(NamespaceCapabilitiesArgs defaults) {
            $ = new NamespaceCapabilitiesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param disabledTaskDrivers `([]string: &lt;optional&gt;)` - Task drivers disabled for the namespace.
         * 
         * @return builder
         * 
         */
        public Builder disabledTaskDrivers(@Nullable Output<List<String>> disabledTaskDrivers) {
            $.disabledTaskDrivers = disabledTaskDrivers;
            return this;
        }

        /**
         * @param disabledTaskDrivers `([]string: &lt;optional&gt;)` - Task drivers disabled for the namespace.
         * 
         * @return builder
         * 
         */
        public Builder disabledTaskDrivers(List<String> disabledTaskDrivers) {
            return disabledTaskDrivers(Output.of(disabledTaskDrivers));
        }

        /**
         * @param disabledTaskDrivers `([]string: &lt;optional&gt;)` - Task drivers disabled for the namespace.
         * 
         * @return builder
         * 
         */
        public Builder disabledTaskDrivers(String... disabledTaskDrivers) {
            return disabledTaskDrivers(List.of(disabledTaskDrivers));
        }

        /**
         * @param enabledTaskDrivers `([]string: &lt;optional&gt;)` - Task drivers enabled for the namespace.
         * 
         * @return builder
         * 
         */
        public Builder enabledTaskDrivers(@Nullable Output<List<String>> enabledTaskDrivers) {
            $.enabledTaskDrivers = enabledTaskDrivers;
            return this;
        }

        /**
         * @param enabledTaskDrivers `([]string: &lt;optional&gt;)` - Task drivers enabled for the namespace.
         * 
         * @return builder
         * 
         */
        public Builder enabledTaskDrivers(List<String> enabledTaskDrivers) {
            return enabledTaskDrivers(Output.of(enabledTaskDrivers));
        }

        /**
         * @param enabledTaskDrivers `([]string: &lt;optional&gt;)` - Task drivers enabled for the namespace.
         * 
         * @return builder
         * 
         */
        public Builder enabledTaskDrivers(String... enabledTaskDrivers) {
            return enabledTaskDrivers(List.of(enabledTaskDrivers));
        }

        public NamespaceCapabilitiesArgs build() {
            return $;
        }
    }

}
