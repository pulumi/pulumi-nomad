// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.nomad.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.nomad.inputs.JobTaskGroupTaskArgs;
import com.pulumi.nomad.inputs.JobTaskGroupVolumeArgs;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class JobTaskGroupArgs extends com.pulumi.resources.ResourceArgs {

    public static final JobTaskGroupArgs Empty = new JobTaskGroupArgs();

    @Import(name="count")
    private @Nullable Output<Integer> count;

    public Optional<Output<Integer>> count() {
        return Optional.ofNullable(this.count);
    }

    @Import(name="meta")
    private @Nullable Output<Map<String,Object>> meta;

    public Optional<Output<Map<String,Object>>> meta() {
        return Optional.ofNullable(this.meta);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="tasks")
    private @Nullable Output<List<JobTaskGroupTaskArgs>> tasks;

    public Optional<Output<List<JobTaskGroupTaskArgs>>> tasks() {
        return Optional.ofNullable(this.tasks);
    }

    @Import(name="volumes")
    private @Nullable Output<List<JobTaskGroupVolumeArgs>> volumes;

    public Optional<Output<List<JobTaskGroupVolumeArgs>>> volumes() {
        return Optional.ofNullable(this.volumes);
    }

    private JobTaskGroupArgs() {}

    private JobTaskGroupArgs(JobTaskGroupArgs $) {
        this.count = $.count;
        this.meta = $.meta;
        this.name = $.name;
        this.tasks = $.tasks;
        this.volumes = $.volumes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JobTaskGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JobTaskGroupArgs $;

        public Builder() {
            $ = new JobTaskGroupArgs();
        }

        public Builder(JobTaskGroupArgs defaults) {
            $ = new JobTaskGroupArgs(Objects.requireNonNull(defaults));
        }

        public Builder count(@Nullable Output<Integer> count) {
            $.count = count;
            return this;
        }

        public Builder count(Integer count) {
            return count(Output.of(count));
        }

        public Builder meta(@Nullable Output<Map<String,Object>> meta) {
            $.meta = meta;
            return this;
        }

        public Builder meta(Map<String,Object> meta) {
            return meta(Output.of(meta));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder tasks(@Nullable Output<List<JobTaskGroupTaskArgs>> tasks) {
            $.tasks = tasks;
            return this;
        }

        public Builder tasks(List<JobTaskGroupTaskArgs> tasks) {
            return tasks(Output.of(tasks));
        }

        public Builder tasks(JobTaskGroupTaskArgs... tasks) {
            return tasks(List.of(tasks));
        }

        public Builder volumes(@Nullable Output<List<JobTaskGroupVolumeArgs>> volumes) {
            $.volumes = volumes;
            return this;
        }

        public Builder volumes(List<JobTaskGroupVolumeArgs> volumes) {
            return volumes(Output.of(volumes));
        }

        public Builder volumes(JobTaskGroupVolumeArgs... volumes) {
            return volumes(List.of(volumes));
        }

        public JobTaskGroupArgs build() {
            return $;
        }
    }

}
