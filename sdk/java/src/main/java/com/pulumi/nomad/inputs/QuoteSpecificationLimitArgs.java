// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.nomad.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.nomad.inputs.QuoteSpecificationLimitRegionLimitArgs;
import java.lang.String;
import java.util.Objects;


public final class QuoteSpecificationLimitArgs extends com.pulumi.resources.ResourceArgs {

    public static final QuoteSpecificationLimitArgs Empty = new QuoteSpecificationLimitArgs();

    /**
     * `(string: &lt;required&gt;)` - The region these limits should apply to.
     * 
     */
    @Import(name="region", required=true)
    private Output<String> region;

    /**
     * @return `(string: &lt;required&gt;)` - The region these limits should apply to.
     * 
     */
    public Output<String> region() {
        return this.region;
    }

    /**
     * `(block: &lt;required&gt;)` - The limits to enforce. This block
     * may only be specified once in the `limits` block. Its structure is
     * documented below.
     * 
     */
    @Import(name="regionLimit", required=true)
    private Output<QuoteSpecificationLimitRegionLimitArgs> regionLimit;

    /**
     * @return `(block: &lt;required&gt;)` - The limits to enforce. This block
     * may only be specified once in the `limits` block. Its structure is
     * documented below.
     * 
     */
    public Output<QuoteSpecificationLimitRegionLimitArgs> regionLimit() {
        return this.regionLimit;
    }

    private QuoteSpecificationLimitArgs() {}

    private QuoteSpecificationLimitArgs(QuoteSpecificationLimitArgs $) {
        this.region = $.region;
        this.regionLimit = $.regionLimit;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(QuoteSpecificationLimitArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private QuoteSpecificationLimitArgs $;

        public Builder() {
            $ = new QuoteSpecificationLimitArgs();
        }

        public Builder(QuoteSpecificationLimitArgs defaults) {
            $ = new QuoteSpecificationLimitArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param region `(string: &lt;required&gt;)` - The region these limits should apply to.
         * 
         * @return builder
         * 
         */
        public Builder region(Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region `(string: &lt;required&gt;)` - The region these limits should apply to.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param regionLimit `(block: &lt;required&gt;)` - The limits to enforce. This block
         * may only be specified once in the `limits` block. Its structure is
         * documented below.
         * 
         * @return builder
         * 
         */
        public Builder regionLimit(Output<QuoteSpecificationLimitRegionLimitArgs> regionLimit) {
            $.regionLimit = regionLimit;
            return this;
        }

        /**
         * @param regionLimit `(block: &lt;required&gt;)` - The limits to enforce. This block
         * may only be specified once in the `limits` block. Its structure is
         * documented below.
         * 
         * @return builder
         * 
         */
        public Builder regionLimit(QuoteSpecificationLimitRegionLimitArgs regionLimit) {
            return regionLimit(Output.of(regionLimit));
        }

        public QuoteSpecificationLimitArgs build() {
            if ($.region == null) {
                throw new MissingRequiredPropertyException("QuoteSpecificationLimitArgs", "region");
            }
            if ($.regionLimit == null) {
                throw new MissingRequiredPropertyException("QuoteSpecificationLimitArgs", "regionLimit");
            }
            return $;
        }
    }

}
