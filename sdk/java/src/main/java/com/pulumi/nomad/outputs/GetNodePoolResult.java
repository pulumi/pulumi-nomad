// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.nomad.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.nomad.outputs.GetNodePoolSchedulerConfig;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetNodePoolResult {
    /**
     * @return `(string)` - The description of the node pool.
     * 
     */
    private String description;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return `(map[string]string)` - Arbitrary KV metadata associated with the
     * node pool.
     * 
     */
    private Map<String,String> meta;
    private String name;
    /**
     * @return `(block)` - Scheduler configuration for the node pool.
     * 
     */
    private List<GetNodePoolSchedulerConfig> schedulerConfigs;

    private GetNodePoolResult() {}
    /**
     * @return `(string)` - The description of the node pool.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return `(map[string]string)` - Arbitrary KV metadata associated with the
     * node pool.
     * 
     */
    public Map<String,String> meta() {
        return this.meta;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return `(block)` - Scheduler configuration for the node pool.
     * 
     */
    public List<GetNodePoolSchedulerConfig> schedulerConfigs() {
        return this.schedulerConfigs;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNodePoolResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private String id;
        private Map<String,String> meta;
        private String name;
        private List<GetNodePoolSchedulerConfig> schedulerConfigs;
        public Builder() {}
        public Builder(GetNodePoolResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.meta = defaults.meta;
    	      this.name = defaults.name;
    	      this.schedulerConfigs = defaults.schedulerConfigs;
        }

        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetNodePoolResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetNodePoolResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder meta(Map<String,String> meta) {
            if (meta == null) {
              throw new MissingRequiredPropertyException("GetNodePoolResult", "meta");
            }
            this.meta = meta;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetNodePoolResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder schedulerConfigs(List<GetNodePoolSchedulerConfig> schedulerConfigs) {
            if (schedulerConfigs == null) {
              throw new MissingRequiredPropertyException("GetNodePoolResult", "schedulerConfigs");
            }
            this.schedulerConfigs = schedulerConfigs;
            return this;
        }
        public Builder schedulerConfigs(GetNodePoolSchedulerConfig... schedulerConfigs) {
            return schedulerConfigs(List.of(schedulerConfigs));
        }
        public GetNodePoolResult build() {
            final var _resultValue = new GetNodePoolResult();
            _resultValue.description = description;
            _resultValue.id = id;
            _resultValue.meta = meta;
            _resultValue.name = name;
            _resultValue.schedulerConfigs = schedulerConfigs;
            return _resultValue;
        }
    }
}
