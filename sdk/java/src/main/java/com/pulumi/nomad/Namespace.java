// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.nomad;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.nomad.NamespaceArgs;
import com.pulumi.nomad.Utilities;
import com.pulumi.nomad.inputs.NamespaceState;
import com.pulumi.nomad.outputs.NamespaceCapabilities;
import com.pulumi.nomad.outputs.NamespaceNodePoolConfig;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provisions a namespace within a Nomad cluster.
 * 
 * Nomad auto-generates a default namespace called `default`. This namespace
 * cannot be removed, so destroying a `nomad.Namespace` resource where
 * `name = &#34;default&#34;` will cause the namespace to be reset to its default
 * configuration.
 * 
 * ## Example Usage
 * 
 * Registering a namespace:
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.nomad.Namespace;
 * import com.pulumi.nomad.NamespaceArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var dev = new Namespace("dev", NamespaceArgs.builder()        
 *             .name("dev")
 *             .description("Shared development environment.")
 *             .quota("dev")
 *             .meta(Map.ofEntries(
 *                 Map.entry("owner", "John Doe"),
 *                 Map.entry("foo", "bar")
 *             ))
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * Registering a namespace with a quota:
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.nomad.QuoteSpecification;
 * import com.pulumi.nomad.QuoteSpecificationArgs;
 * import com.pulumi.nomad.inputs.QuoteSpecificationLimitArgs;
 * import com.pulumi.nomad.inputs.QuoteSpecificationLimitRegionLimitArgs;
 * import com.pulumi.nomad.Namespace;
 * import com.pulumi.nomad.NamespaceArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var webTeam = new QuoteSpecification("webTeam", QuoteSpecificationArgs.builder()        
 *             .name("web-team")
 *             .description("web team quota")
 *             .limits(QuoteSpecificationLimitArgs.builder()
 *                 .region("global")
 *                 .regionLimit(QuoteSpecificationLimitRegionLimitArgs.builder()
 *                     .cpu(1000)
 *                     .memoryMb(256)
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *         var web = new Namespace("web", NamespaceArgs.builder()        
 *             .name("web")
 *             .description("Web team production environment.")
 *             .quota(webTeam.name())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 */
@ResourceType(type="nomad:index/namespace:Namespace")
public class Namespace extends com.pulumi.resources.CustomResource {
    /**
     * `(block: &lt;optional&gt;)` - A block of capabilities for the namespace. Can&#39;t
     * be repeated. See below for the structure of this block.
     * 
     */
    @Export(name="capabilities", refs={NamespaceCapabilities.class}, tree="[0]")
    private Output</* @Nullable */ NamespaceCapabilities> capabilities;

    /**
     * @return `(block: &lt;optional&gt;)` - A block of capabilities for the namespace. Can&#39;t
     * be repeated. See below for the structure of this block.
     * 
     */
    public Output<Optional<NamespaceCapabilities>> capabilities() {
        return Codegen.optional(this.capabilities);
    }
    /**
     * `(string: &#34;&#34;)` - A description of the namespace.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return `(string: &#34;&#34;)` - A description of the namespace.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * `(map[string]string: &lt;optional&gt;)` -  Specifies arbitrary KV metadata to associate with the namespace.
     * 
     */
    @Export(name="meta", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> meta;

    /**
     * @return `(map[string]string: &lt;optional&gt;)` -  Specifies arbitrary KV metadata to associate with the namespace.
     * 
     */
    public Output<Optional<Map<String,String>>> meta() {
        return Codegen.optional(this.meta);
    }
    /**
     * `(string: &lt;required&gt;)` - A unique name for the namespace.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return `(string: &lt;required&gt;)` - A unique name for the namespace.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * `(block: &lt;optional&gt;)` - A block with node pool configuration for the namespace (Nomad Enterprise only).
     * 
     */
    @Export(name="nodePoolConfig", refs={NamespaceNodePoolConfig.class}, tree="[0]")
    private Output<NamespaceNodePoolConfig> nodePoolConfig;

    /**
     * @return `(block: &lt;optional&gt;)` - A block with node pool configuration for the namespace (Nomad Enterprise only).
     * 
     */
    public Output<NamespaceNodePoolConfig> nodePoolConfig() {
        return this.nodePoolConfig;
    }
    /**
     * `(string: &#34;&#34;)` - A resource quota to attach to the namespace.
     * 
     */
    @Export(name="quota", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> quota;

    /**
     * @return `(string: &#34;&#34;)` - A resource quota to attach to the namespace.
     * 
     */
    public Output<Optional<String>> quota() {
        return Codegen.optional(this.quota);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Namespace(String name) {
        this(name, NamespaceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Namespace(String name, @Nullable NamespaceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Namespace(String name, @Nullable NamespaceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("nomad:index/namespace:Namespace", name, args == null ? NamespaceArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Namespace(String name, Output<String> id, @Nullable NamespaceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("nomad:index/namespace:Namespace", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Namespace get(String name, Output<String> id, @Nullable NamespaceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Namespace(name, id, state, options);
    }
}
